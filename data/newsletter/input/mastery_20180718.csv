"site","date","headline","url_address","text"
"mastery",2018-07-18,"The Role of Randomization to Address Confounding Variables in Machine Learning","https://machinelearningmastery.com/confounding-variables-in-machine-learning/","A large part of applied machine learning is about running controlled experiments to discover what algorithm or algorithm configuration to use on a predictive modeling problem. A challenge is that there are aspects of the problem and the algorithm called confounding variables that cannot be controlled (held constant) and must be controlled-for. An example is the use of randomness in a learning algorithm, such as random initialization or random choices during learning. The solution is to use randomness in a way that has become a standard in applied machine learning. We can learn more about the rationale for using randomness in controlled experiments by looking briefly at why randomness is used to manage confounding variables in medicine through the use of randomized clinical trials. In this post, you will discover confounding variables and how we can address them using the tool of randomization. After reading this post, you will know: Let¡¯s get started. The Role of Randomization to Address Confounding Variables in Machine LearningPhoto by Funk Dooby, some rights reserved. This post is divided into four parts;l they are: Take my free 7-day email crash course now (with sample code). Click to sign-up and also get a free PDF Ebook version of the course. Download Your FREE Mini-Course In an experiment, we are often interested in the effect of an independent variable on a dependent variable. A confounding variable is a variable that confuses the relationship between the independent and the dependent variable. Confounding, sometimes referred to as confounding bias, is mostly described as a ¡®mixing¡¯ or ¡®blurring¡¯ of effects. <U+2014> Confounding: What it is and how to deal with it, 2008. A confounding variable can influence the outcome of an experiment in many ways, such as: A confounding variable may be known or unknown. They are often characterized as having an association or correlation with both the independent and dependent variables. Another characterization is that the confounding variable affects groups or observations differently. Confounding variables or confounders are often defined as the variables correlate (positively or negatively) with both the dependent variable and the independent variable. A Confounder is an extraneous variable whose presence affects the variables being studied so that the results do not reflect the actual relationship between the variables under study. <U+2014> How to control confounding effects by statistical analysis, 2012. The deeper difficulty of confounding variables is that it may not be obvious that they exist and are impacting results. The effects of confounding variables are often not obvious or even identifiable unless they are specifically addressed in the design of the experiment or data collection method. Confounding variables are traditionally a concern in applied statistics. This is because in statistics we are often concerned with the effect of independent variables on dependent variables in data. Statistical methods are designed to discover and describe these relationships and confounding variables can essentially corrupt or invalidate discoveries. Machine learning practitioners are typically interested in the skill of a predictive model and less concerned with the statistical correctness or interpretability of the model. As such, confounding variables are an important topic when it comes to data selection and preparation, but less important than they may be when developing descriptive statistical models. Nevertheless, confounding variables are critically important in applied machine learning. The evaluation of a machine learning model is an experiment with independent and dependent variables. As such, it is subject to confounding variables. What may be surprising is that you already know this and that the gold-standard practices in applied machine learning address this. Therefore, being intimately aware of the confounding variables in machine learning experiments is required to understand the choice and interpretation of machine learning model evaluation. Consider, what impacts the evaluation of a machine learning model, what are the independent variables? Some examples include: Each of these choices will impact the dependent variable in a machine learning experiment, which is the chosen metric used to estimate the skill of the model when making predictions. The evaluation of a machine learning model involves the design and execution of controlled experiments. A controlled experiment holds all elements constant except one element under study. The two most common types of controlled experiments in machine learning are: Nevertheless, there are confounding variables that the controlled experiments cannot hold constant. Specifically, there are sources of randomness, that if they were held constant would result in an invalid evaluation of the model. Three examples include: For example, weights in a neural network are initialized to random values. Stochastic gradient descent randomizes the order of samples in an epoch to vary the types of updates performed. Random subsets of features are selected for each possible cut point in random forest. And many more examples. Randomization in machine learning algorithms is not a bug; it is a feature intended to improve the performance of the model on average over classical deterministic methods. Randomness can be present in ML at many different levels, usually enhancing performance or alleviating problems and difficulties of classical methods. <U+2014> Randomized Machine Learning Approaches: Recent Developments and Challenges, 2017. These are confounding variables that we cannot hold constant. If they are held constant, the evaluation of the model will no longer provide insight into the generalizability of the result. We will know how well the model performs on a specific data sample or initialization of sequence of decisions during learning, but little idea on how the model will perform in general. The way that we can handle confounding variables that we cannot control is by using randomization. Randomization is a technique used in experimental design to give control over confounding variables that cannot (should not) be held constant. For example, randomization is used in clinical experiments to control-for the biological differences between individual human beings when evaluating a treatment. It is the reason why a treatment must be evaluated on multiple individuals rather than on a single individual before the findings can be generalized. In randomization the random assignment of study subjects to exposure categories to breaking any links between exposure and confounders. This reduces potential for confounding by generating groups that are fairly comparable with respect to known and unknown confounding variables. <U+2014> How to control confounding effects by statistical analysis, 2012. Randomization is a simple tool in experimental design that allows the confounding variables to have their effect across a sample. It shifts the experiment from looking at an individual case to a collection of observations, where statistical tools are used to interpret the finding. In medicine, randomization is the gold standard for evaluating a treatment and is called the randomized clinical trial. It is designed to remove not only the confounding effects of biological differences, but also the bias, such as the effect of the experimenter choosing the members of the treatment and non-treatment groups. You can imagine that a treatment would look very successful if the least-sick members of a cohort were chosen to be administered. An [Randomized clinical trial] is a special kind of cohort study, with the characteristic that patients are randomly assigned to the experimental group (with exposure) and the control group (without exposure). [¡¦] Therefore, randomization helps to prevent selection by the clinician, and helps to establish groups that are equal with respect to relevant prognostic factors. <U+2014> The randomized clinical trial: An unbeatable standard in clinical research?, 2007. There are still confounding variables when using a randomized clinical trial. An example is the case where the experimenters know what treatment participants of the study are receiving. This can impact the way the experimenters interact with the participants, which in turn can impact the results of the experiment. The answer is to use blinding where participants or experimenters do not know the treatment. Ideally, a double-blind experiment is adopted, ensuring that both participates and experimenters are unaware of their treatment. When feasible, it is strongly recommended that also after randomization, patients and clinicians do not know who receives the intervention and who does not. Studies may be single blind (either the patient or the clinician does not know who receives the treatment and who does not) or double blind (both the patient and the clinician do not know who receives the treatment). <U+2014> The randomized clinical trial: An unbeatable standard in clinical research?, 2007. Note, before we move on to look at the use of randomization in machine learning, consider that there are other approaches to managing the effect of confounding variables. Wikipedia has a good list here. Randomization is used in the evaluation of machine learning models to manage the uncontrollable confounding variables. It is key to the standard ways described for evaluating machine learning models and the rationale for using methods such as data resampling and repeating experiments. Randomization allows the machine learning practitioner to generalize a finding, to make it useful and applicable. It¡¯s the reason why careful design of the test harness and resampling method is important. It is the reason why we repeat the evaluation of a model and the reason we don¡¯t fix the seed on the pseudorandom number generator. I talk more about these topics in the posts: When we take a closer look at why we use randomization, to control for confounding variables, it raises questions about the other confounders that we may not be controlling for. For example, the machine learning practitioner knowing the skill of models prior to giving each model a chance to do its best via data preparation and hyperparameter tuning. Perhaps practitioners should blind themselves to remove the possibility of biasing the choice of final model. The risk is that the practitioner that really likes artificial neural networks will ¡°discover¡± a neural network configuration that outperforms other models. At best it is a statistical fluke or violation of Occam¡¯s Razor for a parsimonious solution to a predictive modeling project; at worst, it is scientific fraud. The reason that clinicians aggressively removed this bias is people¡¯s lives were at risk. We may get to that point with machine learning algorithms, e.g. in cars. In practice, today, I think this is good motivation for front-loading an experiment with a large and careful design and automating the execution and statistical interpretation of the results. This section provides more resources on the topic if you are looking to go deeper. In this post, you discovered confounding variables and how we can address them using the tool of randomization. Specifically, you learned: Do you have any questions?
Ask your questions in the comments below and I will do my best to answer. ¡¦by writing lines of code in python Discover how in my new Ebook:Statistical Methods for Machine Learning It provides self-study tutorials on topics like:Hypothesis Tests, Correlation, Nonparametric Stats, Resampling, and much more¡¦ Skip the Academics. Just Results. Click to learn more. Comment  Name (required)  Email (will not be published) (required)  Website Hi, I'm Jason Brownlee, Ph.D.

My goal is to make developers like YOU awesome at applied machine learning."
"mastery",2018-07-16,"All of Statistics for Machine Learning","https://machinelearningmastery.com/all-of-statistics-for-machine-learning/","A foundation in statistics is required to be effective as a machine learning practitioner. The book ¡°All of Statistics¡± was written specifically to provide a foundation in probability and statistics for computer science undergraduates that may have an interest in data mining and machine learning. As such, it is often recommended as a book to machine learning practitioners interested in expanding their understanding of statistics. In this post, you will discover the book ¡°All of Statistics¡±, the topics it covers, and a reading list intended for machine learning practitioners. After reading this post, you will know: Let¡¯s get started. All of Statistics for Machine LearningPhoto by Chris Sorge, some rights reserved. The book ¡°All of Statistics: A Concise Course in Statistical Inference¡± was written by Larry Wasserman and released in 2004. All of Statistics Wasserman is a professor of statistics and data science at Carnegie Mellon University. The book is ambitious. It seeks to quickly bring computer science students up-to-speed with probability and statistics. As such, the topics covered by the book are very broad, perhaps broader than the average introductory textbooks. Taken literally, the title ¡°All of Statistics¡± is an exaggeration. But in spirit, the title is apt, as the book does cover a much broader range of topics than a typical introductory book on mathematical statistics. This book is for people who want to learn probability and statistics quickly. <U+2014> Page vii, All of Statistics: A Concise Course in Statistical Inference, 2004. The book is not for the average practitioner; it is intended for computer science undergraduate students. It does assume some prior knowledge in calculus and linear algebra. If you don¡¯t like equations or mathematical notation, this book is not for you. Interestingly, Wasserman wrote the book in response to the rise of data mining and machine learning in computer science occurring outside of classical statistics. He asserts in the preface the importance of having a grounding in statistics in order to be effective in machine learning. Using fancy tools like neural nets, boosting, and support vector machines without understanding basic statistics is like doing brain surgery before knowing how to use a band-aid. <U+2014> Pages vii-viii, All of Statistics: A Concise Course in Statistical Inference, 2004. The material is presented in a very clear and concise manner. A systematic approach is taken with brief descriptions of a method, equations describing its implementation, and worked examples to motivate the use of the method with sample code in R. In fact, the material is so compact that it often reads like a series of encyclopedia examples. This is great if you want to know how to implement a method, but very challenging if you are new to the methods and seeking intuitions. Take my free 7-day email crash course now (with sample code). Click to sign-up and also get a free PDF Ebook version of the course. Download Your FREE Mini-Course The choice of topics covered by the book is very broad, as mentioned in the previous section. This is great on the one hand as the reader is given exposure to advanced subjects early on. The downside of this aggressive scope is that topics are touched on briefly with very little hand holding. You are left to re-read sections until you get it. Let¡¯s look at the topics covered by the book. This is helpful to both get an idea of the presented scope of the field and the context for the topics that may interest you as a machine learning practitioner. The book is divided into three parts; they are: The first part of the book focuses on probability theory and formal language for describing uncertainty. The second part is focused on statistical inference. The third part focuses on specific methods and problems raised in the second part. The book does have a reference or encyclopedia feeling. As such, there are a lot of chapters, but each chapter is reasonably standalone. The book is divided into 24 chapters; they are: The preface for the book provides a useful glossary of terms mapping them from statistics to computer science. This ¡°Statistics/Data Mining Dictionary¡± is reproduced below. Statistics/Data Mining DictionaryTaken from ¡°All of Statistics¡°. All of the R code and datasets used in the worked examples in the book are available from Wasserman¡¯s homepage. This is very helpful as you can focus on experimenting with the examples rather than typing in the code and hoping that you got the syntax correct. I would not recommend this book to developers who have not touched statistics before. It¡¯s too challenging. I would recommend this book to computer science students who are in math-learning-mode. I would also recommend it to machine learning practitioners with some previous background in statistics or a strong mathematical foundation. If you are comfortable with mathematical notation and you know what you¡¯re looking for, this book is an excellent reference. You can flip to the topic or the method and get a crisp presentation. The problem is, for a machine learning practitioner, you do need to know about many of these topics, just not at the level of detail presented. Perhaps a shade lighter, at the intuition level. If you are up to it, it would be worth reading (or skimming) the following chapters in order to build a solid foundation in probability for statistics: Again, these are important topics, but you require a concept-level understanding only. For coverage of statistical hypothesis tests that you may use to interpret data and compare the skill of models, the following chapters are recommended reading: I would also recommend the chapter on the Bootstrap. It¡¯s just a great method to have in your head, but with a focus for either better understanding bagging and random forest or as a procedure for estimating confidence intervals of model skill. Finally, a statistical approach is used to present machine learning algorithms. I would recommend these chapters if you prefer a more mathematical treatment of regression and classification algorithms: I can read the mathematical presentation of statistics, but I prefer intuitions and working code. I am less likely to pick up this book from my bookcase, in favor of gentler treatments such as ¡°Statistics in Plain English¡± or application focused treatments such as ¡°Empirical Methods for Artificial Intelligence¡°. Do you agree with this reading list?
Let me know in the comments below. This section provides more resources on the topic if you are looking to go deeper. In this post, you discovered the book ¡°All of Statistics¡± that provides a broad and concise introduction to statistics. Specifically, you learned: Have you read this book?
What did you think of it? Let me know in the comments below. Are you thinking of picking up a copy of this book?
Let me know in the comments. ¡¦by writing lines of code in python Discover how in my new Ebook:Statistical Methods for Machine Learning It provides self-study tutorials on topics like:Hypothesis Tests, Correlation, Nonparametric Stats, Resampling, and much more¡¦ Skip the Academics. Just Results. Click to learn more. Comment  Name (required)  Email (will not be published) (required)  Website Hi, I'm Jason Brownlee, Ph.D.

My goal is to make developers like YOU awesome at applied machine learning."
"mastery",2018-07-13,"A Gentle Introduction to Statistical Power and Power Analysis in Python","https://machinelearningmastery.com/statistical-power-and-power-analysis-in-python/","The statistical power of a hypothesis test is the probability of detecting an effect, if there is a true effect present to detect. Power can be calculated and reported for a completed experiment to comment on the confidence one might have in the conclusions drawn from the results of the study. It can also be used as a tool to estimate the number of observations or sample size required in order to detect an effect in an experiment. In this tutorial, you will discover the importance of the statistical power of a hypothesis test and now to calculate power analyses and power curves as part of experimental design. After completing this tutorial, you will know: Let¡¯s get started. A Gentle Introduction to Statistical Power and Power Analysis in PythonPhoto by Kamil Porembi<U+0144>ski, some rights reserved. This tutorial is divided into four parts; they are: Take my free 7-day email crash course now (with sample code). Click to sign-up and also get a free PDF Ebook version of the course. Download Your FREE Mini-Course A statistical hypothesis test makes an assumption about the outcome, called the null hypothesis. For example, the null hypothesis for the Pearson¡¯s correlation test is that there is no relationship between two variables. The null hypothesis for the Student¡¯s t test is that there is no difference between the means of two populations. The test is often interpreted using a p-value, which is the probability of observing the result given that the null hypothesis is true, not the reverse, as is often the case with misinterpretations. In interpreting the p-value of a significance test, you must specify a significance level, often referred to as the Greek lower case letter alpha (a). A common value for the significance level is 5% written as 0.05. The p-value is interested in the context of the chosen significance level. A result of a significance test is claimed to be ¡°statistically significant¡± if the p-value is less than the significance level. This means that the null hypothesis (that there is no result) is rejected. Where: We can see that the p-value is just a probability and that in actuality the result may be different. The test could be wrong. Given the p-value, we could make an error in our interpretation. There are two types of errors; they are: In this context, we can think of the significance level as the probability of rejecting the null hypothesis if it were true. That is the probability of making a Type I Error or a false positive. Statistical power, or the power of a hypothesis test is the probability that the test correctly rejects the null hypothesis. That is, the probability of a true positive result. It is only useful when the null hypothesis is rejected. ¡¦ statistical power is the probability that a test will correctly reject a false null hypothesis. Statistical power has relevance only when the null is false. <U+2014> Page 60, The Essential Guide to Effect Sizes: Statistical Power, Meta-Analysis, and the Interpretation of Research Results, 2010. The higher the statistical power for a given experiment, the lower the probability of making a Type II (false negative) error. That is the higher the probability of detecting an effect when there is an effect. In fact, the power is precisely the inverse of the probability of a Type II error. More intuitively, the statistical power can be thought of as the probability of accepting an alternative hypothesis, when the alternative hypothesis is true. When interpreting statistical power, we seek experiential setups that have high statistical power. Experimental results with too low statistical power will lead to invalid conclusions about the meaning of the results. Therefore a minimum level of statistical power must be sought. It is common to design experiments with a statistical power of 80% or better, e.g. 0.80. This means a 20% probability of encountering a Type II area. This different to the 5% likelihood of encountering a Type I error for the standard value for the significance level. Statistical power is one piece in a puzzle that has four related parts; they are: All four variables are related. For example, a larger sample size can make an effect easier to detect, and the statistical power can be increased in a test by increasing the significance level. A power analysis involves estimating one of these four parameters given values for three other parameters. This is a powerful tool in both the design and in the analysis of experiments that we wish to interpret using statistical hypothesis tests. For example, the statistical power can be estimated given an effect size, sample size and significance level. Alternately, the sample size can be estimated given different desired levels of significance. Power analysis answers questions like ¡°how much statistical power does my study have?¡± and ¡°how big a sample size do I need?¡±. <U+2014> Page 56, The Essential Guide to Effect Sizes: Statistical Power, Meta-Analysis, and the Interpretation of Research Results, 2010. Perhaps the most common use of a power analysis is in the estimation of the minimum sample size required for an experiment. Power analyses are normally run before a study is conducted. A prospective or a priori power analysis can be used to estimate any one of the four power parameters but is most often used to estimate required sample sizes. <U+2014> Page 57, The Essential Guide to Effect Sizes: Statistical Power, Meta-Analysis, and the Interpretation of Research Results, 2010. As a practitioner, we can start with sensible defaults for some parameters, such as a significance level of 0.05 and a power level of 0.80. We can then estimate a desirable minimum effect size, specific to the experiment being performed. A power analysis can then be used to estimate the minimum sample size required. In addition, multiple power analyses can be performed to provide a curve of one parameter against another, such as the change in the size of an effect in an experiment given changes to the sample size. More elaborate plots can be created varying three of the parameters. This is a useful tool for experimental design. We can make the idea of statistical power and power analysis concrete with a worked example. In this section, we will look at the Student¡¯s t test, which is a statistical hypothesis test for comparing the means from two samples of Gaussian variables. The assumption, or null hypothesis, of the test is that the sample populations have the same mean, e.g. that there is no difference between the samples or that the samples are drawn from the same underlying population. The test will calculate a p-value that can be interpreted as to whether the samples are the same (fail to reject the null hypothesis), or there is a statistically significant difference between the samples (reject the null hypothesis). A common significance level for interpreting the p-value is 5% or 0.05. The size of the effect of comparing two groups can be quantified with an effect size measure. A common measure for comparing the difference in the mean from two groups is the Cohen¡¯s d measure. It calculates a standard score that describes the difference in terms of the number of standard deviations that the means are different. A large effect size for Cohen¡¯s d is 0.80 or higher, as is commonly accepted when using the measure. We can use the default and assume a minimum statistical power of 80% or 0.8. For a given experiment with these defaults, we may be interested in estimating a suitable sample size. That is, how many observations are required from each sample in order to at least detect an effect of 0.80 with an 80% chance of detecting the effect if it is true (20% of a Type II error) and a 5% chance of detecting an effect if there is no such effect (Type I error). We can solve this using a power analysis. The statsmodels library provides the TTestIndPower class for calculating a power analysis for the Student¡¯s t test with independent samples. Of note is the TTestPower class that can perform the same analysis for the paired Student¡¯s t test. The function solve_power() can be used to calculate one of the four parameters in a power analysis. In our case, we are interested in calculating the sample size. We can use the function by providing the three pieces of information we know (alpha, effect, and power) and setting the size of argument we wish to calculate the answer of (nobs1) to ¡°None¡°. This tells the function what to calculate. A note on sample size: the function has an argument called ratio that is the ratio of the number of samples in one sample to the other. If both samples are expected to have the same number of observations, then the ratio is 1.0. If, for example, the second sample is expected to have half as many observations, then the ratio would be 0.5. The TTestIndPower instance must be created, then we can call the solve_power() with our arguments to estimate the sample size for the experiment. The complete example is listed below. Running the example calculates and prints the estimated number of samples for the experiment as 25. This would be a suggested minimum number of samples required to see an effect of the desired size. We can go one step further and calculate power curves. Power curves are line plots that show how the change in variables, such as effect size and sample size, impact the power of the statistical test. The plot_power() function can be used to create power curves. The dependent variable (x-axis) must be specified by name in the ¡®dep_var¡® argument. Arrays of values can then be specified for the sample size (nobs), effect size (effect_size), and significance (alpha) parameters. One or multiple curves will then be plotted showing the impact on statistical power. For example, we can assume a significance of 0.05 (the default for the function) and explore the change in sample size between 5 and 100 with low, medium, and high effect sizes. The complete example is listed below. Running the example creates the plot showing the impact on statistical power (y-axis) for three different effect sizes (es) as the sample size (x-axis) is increased. We can see that if we are interested in a large effect that a point of diminishing returns in terms of statistical power occurs at around 40-to-50 observations. Power Curves for Student¡¯s t Test Usefully, statsmodels has classes to perform a power analysis with other statistical tests, such as the F-test, Z-test, and the Chi-Squared test. This section lists some ideas for extending the tutorial that you may wish to explore. If you explore any of these extensions, I¡¯d love to know. This section provides more resources on the topic if you are looking to go deeper. In this tutorial, you discovered the statistical power of a hypothesis test and how to calculate power analyses and power curves as part of experimental design. Specifically, you learned: Do you have any questions?
Ask your questions in the comments below and I will do my best to answer. ¡¦by writing lines of code in python Discover how in my new Ebook:Statistical Methods for Machine Learning It provides self-study tutorials on topics like:Hypothesis Tests, Correlation, Nonparametric Stats, Resampling, and much more¡¦ Skip the Academics. Just Results. Click to learn more. nIce article thank u Thanks. Nice article as always¡¦ Thanks. Excellent Thanks. Comment  Name (required)  Email (will not be published) (required)  Website Hi, I'm Jason Brownlee, Ph.D.

My goal is to make developers like YOU awesome at applied machine learning."
